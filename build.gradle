plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'

	//querydsl add
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

ext["hibernate.version"] = "5.4.20.Final"
ext["h2.version"] = "1.4.200"

group = 'io.rooftop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6")

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

	implementation group: 'com.querydsl', name: 'querydsl-jpa'
	implementation group: 'com.querydsl', name: 'querydsl-apt'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testCompile 'org.springframework.boot:spring-boot-starter-test'

	developmentOnly("org.springframework.boot:spring-boot-devtools")
}

test {
//	useJUnitPlatform()
	forkEvery = 1
}

//querydsl setting start
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl setting end